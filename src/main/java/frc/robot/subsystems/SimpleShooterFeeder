package frc.robot.subsystems;

import edu.wpi.first.wpilibj2.command.Command;
import edu.wpi.first.wpilibj2.command.Commands;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import edu.wpi.first.math.controller.PIDController;
import edu.wpi.first.wpilibj.CAN;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import java.util.ResourceBundle.Control;
import java.util.function.DoubleSupplier;

import com.revrobotics.CANSparkFlex;
import com.revrobotics.RelativeEncoder;
import com.revrobotics.CANSparkLowLevel.MotorType;


public class SimpleShooterFeeder extends SubsystemBase {
    private final CANSparkFlex m_SimpleShooterFeeder;
    private final RelativeEncoder m_Encoder;

    public SimpleShooterFeeder(int canID) {

        m_SimpleShooterFeeder = new CANSparkFlex(canID:1, MotorType.kBrushless);
        m_SimpleShooterFeeder.restoreFactoryDefaults();
        m_SimpleShooterFeeder.setInverted(isInverted:false);
        m_SimpleShooterFeeder.setSmartCurrentLimit(limit: 40);
        m_encoder = m_SimpleShooterFeeder.getEncoder();
        m_SimpleShooterFeeder.burnFlash();



    }

    public double getVelocity() {
        return m_encoder.getVelocity();
    }

    @Override
    public void periodic() {
        SmartDashboard.putNumber(key:"Feeder Velocity", getVelocity());
    }
    public Command SimpleShooterFeeder_forwards() {
        return Commands.runEnd(run:null, end:null, ...requirments:null)
    }


    public void feedshooter() {
        m_SimpleShooterFeeder.setVoltage(outputVoltage:5);
    }
    public void reverse_feeder() {
        m_SimpleShooterFeeder.setVoltage(outputVoltage:(-5));
    }

    public void stop() {
        m_SimpleShooterFeeder.stopMotor()

    }


    public Command SimpleShooterFeeder_forwardsCommand() {
        return Commands.runEnd(
            ()-> this.SimpleShooterFeeder_forwards(),
            this::stop,
            this);
    }


    public Command SimpleShooterFeeder_reverseCommand() {
        return Commands.runEnd(
            ()-> this.SimpleShooterFeeder_reverse(),
            this::stop,
            this);
    }



}